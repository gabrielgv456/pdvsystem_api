// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                    @id @default(autoincrement())
  email                String                 @unique
  name                 String
  password             String
  masterkey            String                 @default("123")
  sells                Sells[]
  products             Products[]
  itensSell            ItensSell[]
  paymentsells         PaymentSell[]
  transactions         Transactions[]
  transactionsProducts TransactionsProducts[]
  Token                String                 @unique
  created_at           DateTime               @default(dbgenerated("CURRENT_TIMESTAMP"))
}

model Products {
  id                   Int                    @id @default(autoincrement())
  name                 String
  value                Float
  store                User                   @relation(fields: [storeId], references: [id])
  storeId              Int
  created_at           DateTime               @default(dbgenerated("CURRENT_TIMESTAMP"))
  itenssells           ItensSell[]
  transactionsProducts TransactionsProducts[]
  quantity             Int
  active               Boolean
}

model TransactionsProducts {
  id            Int      @id @default(autoincrement())
  type          String
  created_at    DateTime @default(dbgenerated("CURRENT_TIMESTAMP"))
  description   String
  quantity      Int
  totalQuantity Int
  product       Products @relation(fields: [productId], references: [id])
  productId     Int
  store         User     @relation(fields: [storeId], references: [id])
  storeId       Int
}

model PaymentTypes {
  id           Int           @id @default(autoincrement())
  type         String        @unique
  paymentsells PaymentSell[]
}

model Sells {
  id           Int            @id @default(autoincrement())
  store        User           @relation(fields: [storeId], references: [id])
  storeId      Int
  created_at   DateTime       @default(dbgenerated("CURRENT_TIMESTAMP"))
  itenssells   ItensSell[]
  paymentsells PaymentSell[]
  transactions Transactions[]
  sellValue    Float
  valuePayment Float
  deleted      Boolean        @default(false)
}

model ItensSell {
  id                 Int      @id @default(autoincrement())
  store              User     @relation(fields: [storeId], references: [id])
  storeId            Int
  sell               Sells    @relation(fields: [sellId], references: [id])
  sellId             Int
  product            Products @relation(fields: [idProduct], references: [id])
  idProduct          Int
  deleted            Boolean  @default(false)
  quantity           Int
  valueProduct       Float
  totalValue         Float
  descriptionProduct String
  created_at         DateTime @default(dbgenerated("CURRENT_TIMESTAMP"))
}

model PaymentSell {
  id          Int          @id @default(autoincrement())
  store       User         @relation(fields: [storeId], references: [id])
  storeId     Int
  sell        Sells        @relation(fields: [sellId], references: [id])
  sellId      Int
  payment     PaymentTypes @relation(fields: [typepayment], references: [type])
  typepayment String
  value       Float
  created_at  DateTime     @default(dbgenerated("CURRENT_TIMESTAMP"))
}

model Transactions {
  id          Int      @id @default(autoincrement())
  type        String
  description String
  created_at  DateTime @default(dbgenerated("CURRENT_TIMESTAMP"))
  value       Float
  sell        Sells?   @relation(fields: [sellId], references: [id])
  sellId      Int?
  store       User     @relation(fields: [storeId], references: [id])
  storeId     Int
}
